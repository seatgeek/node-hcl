name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  check-copyright-header:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: scripts/add-copyrights.sh
      - name: Check for changes
        run: git diff --name-only --exit-code || (echo "Run scripts/add-copyrights.sh locally" && exit 1)
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm install
      - run: npm run tsc
      - run: npm run lint
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Golang 1.23.1
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.1
          cache-dependency-path: |
            ./go.sum
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm install
      - run: npm run build
      - run: npm run test
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Golang 1.23.1
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.1
          cache-dependency-path: |
            ./go.sum
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm install
      - run: npm run build
        env:
          WASM_OUTPUT_DIR: dist/wasm
  release-dry-run:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Golang 1.23.1
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.1
          cache-dependency-path: |
            ./go.sum
      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: "npm"
      - run: npm install
      - run: npm run build
        env:
          WASM_OUTPUT_DIR: dist/wasm
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release -- --dry-run
